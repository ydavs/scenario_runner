import basic.osc

scenario top:
    path: Path                      # A path in the map
    path.set_map("Highway_Map_LHD")    # specify map to use in this test
    path.path_min_driving_lanes(3)         # Path should have at least two lanes

    ego_vehicle: Model3
    npc: Mkz2017
    npc2: Model3
    npc3: AshokTruck
    npc4: AshokTruck
    npc5: AshokTruck
    npc6: Creta
    npc7: OlaScooter
    npc8: AshokTruck
    npc9: OlaScooter                

    event start
    event end
    event left
    event right
    do serial:
        spawn: parallel(duration: 7s):
            npc.drive(path) with:
                speed(35kph)
                lane(4, at: start) # left to right: [1..n]
            npc2.drive(path) with:
                speed(35kph)
                lane(same_as:npc, at:start)
                position(15m, behind:npc, at:start)
            npc3.drive(path) with:
                lane(left_of:npc, at:start)
                position(15m, ahead_of:npc, at:start)
                speed(50kph)
            npc4.drive(path) with:
                speed(50kph)
                lane(left_of:npc, at:start)
                position(1m, behind:npc, at:start)
            npc5.drive(path) with:
                speed(55kph)
                lane(left_of:npc, at:start)
                position(35m, ahead_of:npc, at:start)
            npc6.drive(path) with:
                speed(40kph)
                lane(same_as:npc, at:start)
                position(15m, ahead_of:npc, at:start)
            ego_vehicle.drive(path) with:
                speed(55kph)
                lane(left_of:npc, at:start)
                position(60m, behind:npc, at:start)
            npc7.drive(path) with:
                speed(30kph)
                lane(left_of:ego_vehicle, at:start)
                position(15m, ahead_of:ego_vehicle, at:start)
            npc8.drive(path) with:
                speed(55kph)
                lane(left_of:ego_vehicle, at:start)
                position(140m, ahead_of:ego_vehicle, at:start)
            npc9.drive(path) with:
                speed(55kph)
                lane(left_of:npc8, at:start)
                position(15m, behind:npc8, at:start)
                
        switch: parallel(duration:2s):
            npc.drive(path)
            npc2.drive(path)
            npc3.drive(path)
            npc4.drive(path)
            npc5.drive(path)
            npc6.drive(path)
            npc7.drive(path)
            npc8.drive(path)
            ego_vehicle.drive(path) with:
                change_lane(lane_changes:1,side:left)
                speed(90kph)  
        continue: parallel(duration:4.75s):
            npc.drive(path)
            npc2.drive(path)
            npc3.drive(path)
            npc4.drive(path)
            npc5.drive(path)
            npc6.drive(path)
            npc7.drive(path)
            npc8.drive(path)
            ego_vehicle.drive(path) with:
                speed(90kph)
        switch 2: parallel(duration:2s):
            npc.drive(path)
            npc2.drive(path)
            npc3.drive(path)
            npc4.drive(path)
            npc5.drive(path)
            npc6.drive(path)
            npc7.drive(path)
            npc8.drive(path)
            ego_vehicle.drive(path) with:
                change_lane(lane_changes:1,side:right)
                speed(90kph)
        continue: parallel(duration:4.75s):
            npc.drive(path)
            npc2.drive(path)
            npc3.drive(path)
            npc4.drive(path)
            npc5.drive(path)
            npc6.drive(path)
            npc7.drive(path)
            npc8.drive(path)
            ego_vehicle.drive(path) with:
                speed(90kph)

