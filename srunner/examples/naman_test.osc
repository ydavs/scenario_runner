import basic.osc

#scenario to implement ego vehicle approaching a stopped lead vehicle:

#we have 2 cars:ego, lead

scenario top:
    path: Path                      # A path in the map
    path.set_map("Highway_Map_Light")    # specify map to use
    path.path_min_driving_lanes(2)         # Path should have at least two lanes

    ego_vehicle: Mercedes  #Mercedes on the roads of india :) clearly a synthetic simulation!
    lead_vehicle: Model3
    
    event start
    event end
    event left
    event right

    do serial:

        spawn: parallel(duration: 5s):
            #the 3 vehicles are spawned and begin their drive
            ego_vehicle.drive(path) with:
                speed(30kph)
                lane(1, at:start)
            lead_vehicle.drive(path) with:
                speed(0.1kph) #Dont write 0 as iske respect mei kucch likhoge toh error ayega
                lane(same_as:ego_vehicle, at:start)
                position(100m, ahead_of:ego_vehicle, at:start)

        slow_down: parallel(duration:4s):
            #the ego_vehicle slows down
            ego_vehicle.drive(path) with:
                position(30m, behind:lead_vehicle, at:end)
            lead_vehicle.drive(path) with:
                speed(0.1kph)
        slow_down3: parallel(duration:3s):
            ego_vehicle.drive(path) with:
                speed(15kph)
            lead_vehicle.drive(path) with:
                speed(0.1kph)
        further slow_down: parallel(duration: 1s):
            #the ego_vehicle slows down
            ego_vehicle.drive(path) with:
                position(20m, behind:lead_vehicle, at:end)
            lead_vehicle.drive(path) with:
                speed(0.1kph)
        slow_down3: parallel(duration:3s):
            ego_vehicle.drive(path) with:
                speed(5kph)
            lead_vehicle.drive(path) with:
                speed(0.1kph)
        changelane: parallel(duration: 7s):
            ego_vehicle.drive(path) with:
                change_lane(lane_changes:1,side:right)
            lead_vehicle.drive(path) with:
                speed(0.1kph)
        get_ahead: parallel(duration: 3s):
            ego_vehicle.drive(path) with:
                position(20m, ahead_of:lead_vehicle, at:end)
        changelane2: parallel(duration: 3s):
            ego_vehicle.drive(path) with:
                change_lane(lane_changes:1,side:left)
            lead_vehicle.drive(path) with:
                speed(0.1kph)
        speedup:parallel(duration: 5s):
            ego_vehicle.drive(path) with:
                speed(45kph)
            lead_vehicle.drive(path) with:
                speed(0.1kph)

        

