# Made by Naman Singh, July 2024

import basic.osc

#to support orientation angle

# tag::library-physical-angle[]
type angle is SI(rad: 1)
unit degree of angle is SI(rad: 1, factor: 57.295779513)
unit deg    of angle is SI(rad: 1, factor: 57.295779513)
unit radian of angle is SI(rad: 1, factor: 1)
unit rad    of angle is SI(rad: 1, factor: 1)
# end::library-physical-angle[]

#Ego is driving in the rightmost lane 
#when suddenly a scooter appears from the wrong side. Ego must change lanes.

#road_action(speed:40kph, turn:right, wrong_side:false) command to take the right turn if available
#in case of intersection

#lane must be defined before orientation!!

scenario top:
    path: Path                      # A path in the map
    path.set_map("Highway_Map_Light")    # specify map to use
    path.path_min_driving_lanes(3)         # Path should have at least 3 lanes

    ego_vehicle: Model3
    npc1: Mercedes
    npc2: OlaScooter  #traffic coming from the opposite side.
    
    event start
    event end
    event left
    event right

    do serial:

        spawn: parallel(duration: 7s):
            ego_vehicle.drive(path) with:
                speed(15mps)
                lane(3, at:start)
            npc1.drive(path) with:
                speed(15mps)
                lane(left_of:ego_vehicle, at:start)
                position(5m, behind:ego_vehicle, at:start) 
            npc2.drive(path) with:
                road_action(speed:10mps, turn:straight, wrong_side:true)
                lane(same_as:ego_vehicle, at:start)
                orientation(yaw:180rad, pitch:360.0rad, roll:0.0rad, relative_to:ego_vehicle, at: start)
                position(220m, ahead_of:ego_vehicle, at:start)
        slow_down: parallel(duration: 3s):
            #ego slows down
            ego_vehicle.drive(path) with:
                speed(10mps)
            npc1.drive(path) with:
                speed(15mps)
            npc2.drive(path) with:
                road_action(speed:10mps, turn:straight, wrong_side:true)
        lanechange: parallel(duration: 4s):
            #ego changes its lane
            ego_vehicle.drive(path) with:
                change_lane(lane_changes:1,side:left)
            npc1.drive(path) with:
                speed(15mps)
            npc2.drive(path) with:
                road_action(speed:10mps, turn:straight, wrong_side:true)
        lanechange: parallel(duration: 3s):
            #ego changes its lane
            ego_vehicle.drive(path) with:
                change_lane(lane_changes:1,side:right)
            npc1.drive(path) with:
                speed(15mps)
            npc2.drive(path) with:
                road_action(speed:10mps, turn:straight, wrong_side:true)
        speedup: parallel(duration: 4s):
            #ego speeds up to overtake
            ego_vehicle.drive(path) with:
                speed(15mps)
            npc1.drive(path) with:
                speed(15mps)
            npc2.drive(path) with:
                road_action(speed:10mps, turn:straight, wrong_side:true)
        