import basic.osc
#video number: 874
# tag::library-physical-angle[]
type angle is SI(rad: 1)
unit degree of angle is SI(rad: 1, factor: 57.295779513)
unit deg    of angle is SI(rad: 1, factor: 57.295779513)
unit radian of angle is SI(rad: 1, factor: 1)
unit rad    of angle is SI(rad: 1, factor: 1)
# end::library-physical-angle[]

scenario top:
    path: Path                      # A path in the map
    path.set_map("Highway_Map_Light")    # specify map to use in this test
    path.path_min_driving_lanes(3)
    #path.path_with_junction(junction_id:None,distance:None)         # Path should have at least two lanes

    greenTruck: Bus
    npc: Mercedes
    npc2: Creta
    npc3: Model3
    npc4: AudiEtron               # white car behind green truck
    ego_vehicle: AudiEtron               

    event start
    event end
    event left
    event right

    do serial:
        spawn: parallel(duration:10s):
            ego_vehicle.drive(path) with:
                speed(50kph)
                lane(2, at: start)
            npc.drive(path) with:  ## front car with same speed
                speed(50kph)
                lane(same_as:ego_vehicle, at: start)
                position(20m, ahead_of:ego_vehicle, at: start)
            npc2.drive(path) with:
                speed(45kph)
                lane(right_of:ego_vehicle, at: start)
                position(100m, ahead_of:ego_vehicle, at: start)
            npc3.drive(path) with:
                speed(45kph)
                lane(right_of:ego_vehicle, at: start)
                position(90m, ahead_of:ego_vehicle, at: start)
            greenTruck.drive(path) with:
                road_action(speed:40kph,wrong_side:true)
                lane(left_of:ego_vehicle, at: start)
                orientation(yaw:185rad, pitch:360.0rad, roll:0.0rad, relative_to:ego_vehicle, at: start)
                position(100m, ahead_of:ego_vehicle, at: start)