import basic.osc

# tag::library-physical-angle[]
type angle is SI(rad: 1)
unit degree of angle is SI(rad: 1, factor: 57.295779513)
unit deg    of angle is SI(rad: 1, factor: 57.295779513)
unit radian of angle is SI(rad: 1, factor: 1)
unit rad    of angle is SI(rad: 1, factor: 1)
# end::library-physical-angle[]

scenario top:
    path: Path                      # A path in the map
    path.set_map("Vshape_LHD1")    # specify map to use in this test
    path.path_min_driving_lanes(1)
    path.path_with_junction(junction_id:None,distance:None)         # Path should have at least two lanes

    npc: Mercedes
    npc2: Mercedes
    npc3: OlaScooter
    npc4: AudiEtron       
    ego_vehicle: AudiEtron               

    event start
    event end
    event left
    event right

    do serial:
        spawn: parallel(duration:10s):
            ego_vehicle.drive(path) with:
                speed(20kph)
                lane(1, at: start)
            npc.drive(path) with:
                speed(22kph)
                lane(right_of:ego_vehicle, at:start)
                position(15m, ahead_of:ego_vehicle, at:start)
            npc2.drive(path) with:
                speed(20kph)
                lane(same_as:ego_vehicle, at:start)
                position(30m, ahead_of:ego_vehicle, at:start)
            npc3.drive(path) with:
                speed(22kph)
                lane(right_of:ego_vehicle, at:start)
                position(5m, ahead_of:ego_vehicle, at:start)
            npc4.drive(path) with:
                speed(22kph)
                lane(same_as:ego_vehicle, at:start)
                position(10m, ahead_of:ego_vehicle, at:start)
        switch: parallel(duration:10s):
            npc2.drive(path)
            ego_vehicle.drive(path) with:
                lane(right_of:ego_vehicle, at:end)
            npc.drive(path) with:
                road_action(speed:15kph,turn:right)
            npc3.drive(path) with:
                speed(20kph)
                lane(right_of: npc3, at: end)
            npc4.drive(path)
